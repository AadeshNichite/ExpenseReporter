{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","porps","value","selected","onChange","event","onChangeYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","item","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArray","dataPoint","totalMax","max","ExpenseChart","chartDataPoint","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpense","items","filter","exp","toString","changedYear","ExpenseForm","enteredTitleValue","setEnterdTitle","enteredAmountValue","setAmountValue","enteredDateValue","setDateValue","onSubmit","preventDefault","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpectData","expenseData","random","onSubmitForm","dummy_expense","App","setExpense","savedData","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d8b0e87.chunk.js","sourcesContent":["import './Card.css'\n\nconst Card = (props) =>{\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React from 'react';\n\nimport './ExpenseFilter.css';\n\nconst ExpensesFilter = (porps) => {\n\n  const onSelectDate = (event) =>{\n      porps.onChangeYear(event.target.value)\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={porps.selected} onChange={onSelectDate}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;","import React  from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => { \n\n  return (\n    <li>\n        <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n            <h2>{props.title}</h2>\n            <div className='expense-item__price'>${props.amount}</div>\n        </div>\n        </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;","import './ExpenseList.css'\nimport ExpenseItem from './ExpenseItem'\n\nconst ExpenseList = (props)=>{\n\n    if(props.item.length === 0){\n        return <h2 className=\"expenses-list__fallback\">No Expense Availabel .</h2>\n    }\n\n    return <ul className=\"expenses-list\">{\n        props.item.map((expense)=>(\n            <ExpenseItem\n                key = {expense.id}\n                title = {expense.title} \n                amount = {expense.amount}\n                date = {expense.date}\n            />\n            )\n        )\n    }\n    </ul>\n\n}\n\nexport default ExpenseList;","import './ChartBar.css'\n\nconst ChartBar = (props) =>{\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0){\n        barFillHeight = Math.round((props.value / props.maxValue)*100) + '%';\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n}\n\nexport default ChartBar","import ChartBar from './ChartBar'\nimport './Chart.css'\n\nconst Chart = (props) =>{\n    const valueArray = props.dataPoint.map(dataPoint => dataPoint.value)\n    const totalMax = Math.max(...valueArray)\n    return <div className=\"chart\">\n        {props.dataPoint.map( dataPoint => (\n            <ChartBar \n                key = {dataPoint.label}\n                value={dataPoint.value} \n                maxValue={totalMax} \n                label={dataPoint.label}\n            /> \n        ))}\n    </div>\n}\nexport default Chart;","import Chart from '../Chart/Chart'\n\nconst ExpenseChart = (props) =>{\n    const chartDataPoint = [\n        { label : 'Jan' , value : 0 },\n        { label : 'Feb' , value : 0 },\n        { label : 'Mar' , value : 0 },\n        { label : 'Apr' , value : 0 },\n        { label : 'May' , value : 0 },\n        { label : 'Jun' , value : 0 },\n        { label : 'Jul' , value : 0 },\n        { label : 'Aug' , value : 0 },\n        { label : 'Sep' , value : 0 },\n        { label : 'Oct' , value : 0 },\n        { label : 'Nov' , value : 0 },\n        { label : 'Dec' , value : 0 },\n    ];\n\n    for(const expense of props.expense){\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => January =>0\n        chartDataPoint[expenseMonth].value += expense.amount;\n\n    }\n\n    return <Chart dataPoint={chartDataPoint} />\n}\n\nexport default ExpenseChart;","import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpenseFilter'\nimport ExpenseList from './ExpenseList';\n\nimport ExpensesChart from './ExpenseChart'\n\nconst Expenses = (props) => {\n    \n    const [filteredYear,setFilteredYear] = useState('2020');\n\n    const getChangeYear = (changedYear) =>{\n        setFilteredYear(changedYear)\n    }\n\n    const filteredExpense = props.items.filter(exp =>{\n        return exp.date.getFullYear().toString() === filteredYear;\n    })\n\n  return (\n      <div>\n        <Card className=\"expenses\">\n            <ExpensesFilter selected={filteredYear} onChangeYear={getChangeYear}/>\n            <ExpensesChart expense={filteredExpense}/>\n            <ExpenseList item={filteredExpense}/>\n        </Card>\n      </div>\n\n  );\n}\n\nexport default Expenses;","import React , {useState} from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) =>{\n\n    const [enteredTitleValue , setEnterdTitle] = useState('');\n    const [enteredAmountValue , setAmountValue ] = useState('');\n    const[enteredDateValue, setDateValue ] = useState('');\n\n    //Instesd of three use one is also fine\n    // const [ userInput , setUserInput ] = useState({\n    //     enteredTitleValue:'',\n    //     enteredAmountValue:'',\n    //     enteredDateValue:''\n    // })\n\n    const titleChangeHandler = (event) =>{\n        setEnterdTitle(event.target.value);\n        //Instead of upper one use below for single useState\n        // setUserInput({\n        //     ...userInput,\n        //     enteredTitleValue : event.target.value\n        // });\n    }\n\n    \n    const amountChangeHandler = (event) =>{\n        setAmountValue(event.target.value);\n        // setUserInput({\n        //     ...userInput,\n        //     enteredAmountValue : event.target.value\n        // });\n        // setUserInput((prevState) =>{\n        //     return {...prevState,enteredAmountValue : event.target.value}\n        // })\n    }\n\n    \n    const dateChangeHandler = (event) =>{\n        setDateValue(event.target.value)\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDateValue : event.target.value\n        // });\n    }\n\n    const submitHandler = (event) =>{\n        event.preventDefault();\n\n        const expense = {\n            title : enteredTitleValue,\n            amount : +enteredAmountValue,\n            date : new Date(enteredDateValue)\n        }\n\n        // console.log(expense);\n        props.onSaveExpenseData(expense);\n\n        setEnterdTitle('');\n        setAmountValue('');\n        setDateValue('');\n    }\n\n    return <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n                <label>Title</label>\n                <input type=\"text\" value={enteredTitleValue} onChange={titleChangeHandler} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Amount</label>\n                <input type=\"number\" value={enteredAmountValue} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\n            </div>\n            <div className=\"new-expense__control\">\n                <label>Date</label>\n                <input type=\"date\" value={enteredDateValue} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\n            </div>\n        </div>\n        <div className=\"new-expense__actions\">\n            <button type=\"button\" onClick={props.onCancel}>Cancle</button>\n            <button type=\"submit\">Add Expense</button>\n        </div>\n    </form>\n}\nexport default ExpenseForm;","import React, { useState } from 'react'\n\nimport './NewExpense.css'\nimport ExpenseForm from './ExpenseForm'\nconst NewExpense = (props) =>{\n\n    const [isEditing , setIsEditing ] = useState(false);\n\n    const saveExpenseDataHandler = (enteredExpectData) =>{\n        const expenseData = {\n            ...enteredExpectData,\n            id:Math.random().toString()\n        };\n        props.onSubmitForm(expenseData);\n        setIsEditing(false)\n    }\n\n    const startEditingHandler = () =>{\n        setIsEditing(true)\n    }\n\n    const stopEditingHandler = () =>{\n        setIsEditing(false)\n    }\n\n    return <div className=\"new-expense\">\n        {!isEditing && <button onClick = {startEditingHandler}>Add New Expense</button>}\n        { isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n    </div>\n}\n\nexport default NewExpense;","import React,{useState} from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\n\nimport NewExpense from './components/NewExpense/NewExpense'\n\nconst dummy_expense = [\n  {id:'e1',title:'Insurance',amount:2000,date:new Date(2021,2,28)},\n  {id:'e2',title:'Toilet Paper',amount:4000,date:new Date(2021,3,28)},\n  {id:'e3',title:'Laptop',amount:10000,date:new Date(2021,1,28)},\n  {id:'e4',title:'Break',amount:1000,date:new Date(2021,12,28)}\n];\n\nconst App = () => {\n\n  const [expense,setExpense] = useState(dummy_expense);\n\n  const addFormDataToExpense = (savedData) =>{\n    // setNewExpense([savedData , ...expenses])\n    setExpense((prevExpense)=>{\n      return [savedData, ...prevExpense];\n    })\n  }\n  return (\n    <div>\n       <NewExpense onSubmitForm={addFormDataToExpense} />\n       <Expenses items={expense} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}